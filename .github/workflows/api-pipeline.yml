name: API CI-CD

on:
  push:
    branches: ["release"]
    paths:
      - ".github/workflows/api-pipeline.yml"
      - "api/**"

env:
  key_file: ./cloud.key

jobs:
  build:
    uses: ./.github/workflows/build.yml
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    with:
      REGISTRY_IMAGE: ${{ vars.REGISTRY }}/${{ vars.API_IMAGE_NAME }}
      IMAGE_ARTIFACT: ${{ vars.API_IMAGE_NAME }}.${{ github.sha }}

  publish:
    needs: build
    uses: ./.github/workflows/publish.yml
    permissions:
      id-token: write
      attestations: write
    with:
      TAG: ${{ github.sha }}
      IMAGE_ARTIFACT: ${{ vars.API_IMAGE_NAME }}.${{ github.sha }}
      REGISTRY_IMAGE: ${{ vars.REGISTRY }}/${{ vars.API_IMAGE_NAME }}
    secrets:
      DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
      DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

  database-availability:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: solve
        run: echo "ab"

  database-deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: solve
        run: echo "ab"

  backend:
    needs: [database-availability, database-deploy]
    if: needs.database-availability.result == 'success' || needs.database-deploy.result == 'success'
    uses: ./.github/workflows/deploy.yml
    with:
      SERVICE_NAME: ${{ vars.API_SERVICE_NAME }}
      CONTAINER_NAME: ${{ vars.API_CONTAINER_NAME }}
    secrets:
      CLOUD_USER: ${{ secrets.CLOUD_USER }}
      CLOUD_ADDRESS: ${{ secrets.CLOUD_ADDRESS }}
      CLOUD_RSA_KEY: ${{ secrets.CLOUD_RSA_KEY }}

  cleanup:
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - name: Move file to project folder to keep history
        run: |
          ssh -o StrictHostKeyChecking=no -i "${{ env.key_file }}" ${{ secrets.CLOUD_USER }}@${{ secrets.CLOUD_ADDRESS }} sudo mv /home/${{ secrets.CLOUD_USER }}/docker-compose.yml ${{ vars.PROJECT_FOLDER }}/docker-compose.yml

      - name: Remove sensitive files
        run: |
          rm -f ${{ env.key_file }}
          rm -f ./.env
