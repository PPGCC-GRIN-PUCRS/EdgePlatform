name: Docker Image CI

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]
    types: [ "approved" ]

env:
  REGISTRY_IMAGE: ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME}}
  IMAGE_ARTIFACT:  ${{ vars.IMAGE_NAME }}.${{ github.sha }}
  
jobs:

  build:
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: |
          ${{ env.IMAGE_ARTIFACT}}
          ${{ env.REGISTRY_IMAGE }}
          ${{ env.REGISTRY_IMAGE }}:${{ github.sha }}

    - name: Set Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: build image
      uses: docker/build-push-action@v6
      with:
        tags: |
          ${{ vars.IMAGE_NAME }}:latest
          ${{ env.REGISTRY_IMAGE }}:${{ github.sha }}
        outputs: |
          type=docker
          dest=/tmp/${{ vars.IMAGE_NAME }}.${{ github.sha }}.tar
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.IMAGE_ARTIFACT }}
        path: /tmp/${{ env.IMAGE_ARTIFACT }}.tar



  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.IMAGE_ARTIFACT }}
          path: /tmp
      
      - name: Load image
        run: |
          docker load --input /tmp/${{ env.IMAGE_ARTIFACT }}.tar
          docker image ls -a

      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      # - name: Docker publish image
      #   run: docker push ${{ env.REGISTRY_IMAGE }}:${{ github.sha }}

      - name: Publish attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY_IMAGE }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
